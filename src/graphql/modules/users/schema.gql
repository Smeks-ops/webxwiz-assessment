type User {
  id: ID
  email: String
  password: String
}

type CreateUserResponse {
  user: User
  success: Boolean!
  message: String!
}

type LoginResponse {
  token: String
  user: User
  success: Boolean!
  message: String!
}

type Enable2FAResponse {
  code: String
  success: Boolean!
  message: String!
}

type Query {
  user(id: ID!): User!
  users: [User!]!
  regenerate2FAQrCode: Enable2FAResponse!
}

input UserInput {
  email: String!
  password: String!
}

type Mutation {
  registerUser(email: String!, password: String): CreateUserResponse!
  login(email: String!, password: String!, secretKey: String): LoginResponse!
  resetPassword(email: String!, oldPassword: String!, newPassword: String!): CreateUserResponse!
  enable2FA(email: String!): Enable2FAResponse!
}
